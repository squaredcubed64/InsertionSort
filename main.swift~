

// ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
let unsortedIntegers = [5, 1, 4, 2, 8]
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
// ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧

// 1.  Edit the file named "main.swift"
// 2.  Within this file, write a program which will sort the array of integers
//     using Insertion Sort.
// 3.  The output should be as follows:
//     Pass: <p>, Swaps: <pass swap count>/<total swap count>, Array: [<comma-delimitted array contents>]
//     For example:
//         Pass 0, Swaps: 0/0, Array: [4, 3, 2, 10, 12, 1, 5, 6]
//         Pass 1, Swaps: 1/1, Array: [3, 4, 2, 10, 12, 1, 5, 6]




// Add your code below:

var arr = unsortedIntegers
var totalSwaps = 0

for i in 0 ..< arr.count {
    let cur = arr[i]
    var comp = cur
    var j = i - 1
    var swaps = 0
    
    if j != -1 {
        comp = arr[j]
    }
    
    while comp > cur {
        arr[j] = cur
        arr[j + 1] = comp
        swaps += 1
        j -= 1
        
        if j != -1 {
            comp = arr[j]
        } else {
            break
        }
    }

    totalSwaps += swaps
    print("Pass: \(i), Swaps: \(swaps)/\(totalSwaps), Array: \(arr)")
}   
